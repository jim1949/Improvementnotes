This is the notes for I have everyday.

To grown up as a good programmer.

找一种你喜欢用到工作中的语言
修复问题
（公开）发布工作
写博客
保持健康心态的小技巧
引言

“哦，天那。相比其他开发者，我又笨又没准备。老板会知道我是多么无能，我要被炒鱿鱼了。”

这种想法，在我们作为一名软件开发人员刚进入工作领域的时候，非常常见。我也不例外。这种想法会让人觉得自己不如其他的开发者，感觉自己是滥竽充数的，感觉自己像一个全面的傻瓜，当涉及到写代码的时候。

在短短的几个月后，我第一次获得一份真正编程工作的兴奋——改善和维护一个基于web的研究平台——终于变成了绝对的恐惧，那些消极负面的想法在我的脑海里不断地涌入。即使在我去了更大节奏更快的组织机构，以及之后终于开创了我自己的企业，这些想法也在不断地蚕食我。

我总是觉得自己写的每一行代码都那么笨重，低效，如果展示给任何其他有才干的开发者看绝对会被批判得体无完肤。我感觉自己很笨，他们发现这一点不过是时间问题。

听起来很熟悉？如果你有我这种想法，有绝大多数软件开发者都有的这种想法，很大的可能是会惶惶而不可终日。

下面我要介绍一些我发现的有助于，你作为一个初出茅庐的开发人员，提升你自己和你的职业生涯前景的关键策略，并在推动职业发展时保持一种健康的心态。

作为一个初出茅庐的开发人员提升自己和职业生涯前景

无论你是正在找你的第一份工作，还是盯上了潜在的晋升，在一定程度上你都需要与其他的开发者竞争。为了确保你能从中脱颖而出，这里有一些关键的步骤可以帮助你迈向成功。

1.找一种你喜欢用到工作中的语言。

要成为一个更优秀的程序员，需要定时经常性地练习编程并用不同的语言和技术扩宽你的经验，但是语言是如此之多，很多时候你不知道从哪里开始，也不知道该选择什么语言才最适合你要解决的问题风格。

如果你还没有想好具体的语言，并且想要先试验下的话，我会建议你搜索求职网站，例如Stack Overflow Careers、Indeed和Monster，看看是什么语言最抢手。如果你想或者目前的职位要求的话，你可以牢牢掌握一些特定的语言，然后开始研究和试验。



The TIOBE Index可用来查看哪些语言更受欢迎

当我开始我的第一份工作的时候——一个基于web研究平台的开发者——我进入了学习的阵营：虽然我有足够的技能在面试时通过编程测试，但是这份工作要求我加强PHP、JavaScript和SQL技能。于是下班后以及周末，我都会磨练自己在那三方面的技能，以便于能够在工作中表现良好，能够拥有更多基于web开发的机会，而这些对于我现在能够拥有和打理我自己的web开发公司有很大的贡献。

不管你恰巧遇到或选择了什么语言，关键是经常练习。尝试不同的语言，通过一些小例子编码，然后用它们构建小的项目。一旦你找到了能与你产生共鸣的一种或一系列语言以及如何处理问题的方法，坚持下去，并经常性地定期实践练习。

2.发现问题或任何让你觉得生气的事情。

正如随着我职业生涯的向前迈进，我进入了一家大的临终护理组织，担任web开发者。虽然我的工作主要是改善和维护我们的在线计费和CRM系统，但是许多医务人员经常抱怨：病人总是报告说系统运行得异常缓慢。这让我很生气，它让员工更生气——因为不得不去修复。

临终护理几乎纯粹运行在微软技术上，并且数据库也不例外——Microsoft SQL Server（MSSQL）。虽然它不是我感觉最舒服的查询语言，但是我依然在家里研究、阅读、练习构建小型的MSSQL项目。通过我的努力，我渐渐能够建立一些示例报告来向数据库管理员展示报告可以如何改进。随着时间的推移，我帮助实现的优化促使我得到了晋升，通过修复那个问题学到的技能帮助我获得了一份数据库管理的工作。

和一种语言一起成长和点燃学习激情的最好办法是，使用你学到的知识来帮助解决令你感到苦恼的问题。不仅要学习语言本身，也要学习语言可以如何应用到实际生活中的问题。

3.公开发布到Github或其他公共代码平台上。

即使你不认为有人会使用它，喜欢它，或者甚至看上一眼，还是要发布你的代码，一旦你觉得它达到生产标准的话。你的项目可能不会改变世界，但它可以让你脱颖而出，让你可以坦然对待别人查看和批评你的工作。此外，它可以让你的简历增色不少。

4.写博客，展示你正在学习的东西，怎么学习以及为什么。

向世界（以及将来的雇主）展示你正在学习，以及你有主动的学习意愿，就可以让你领先于95％以上的同行业开发人员。你也可以练习你的写作技巧，这个过程也能让你学到很多关于自我方面的东西——你如何处理问题，如何分解和解决。你还需要整理一下你常用的思考方式，如何学习和成长，以及如何取得进步。

5.在软件开发社区中表现活跃。

解决问题，看别人怎么解决问题，说出自己的声音和意见。我通过Stack Overflow和编程社区做到这些。这还不是最宽容的文化，因为你将会遇到一些非常眼尖的开发者咆哮你怎么在伪代码中忘记了后面那个括号，但这能让你与其他的开发者交流，使得具备接受诚实（有时是残酷）批评的经验，并知道其他人可能会如何处理问题，从而打开思考问题的新思路。

6.学会如何简明扼要地解释给技术和非技术人员听。

我总是听到大家说沟通是实现职业成功时，要掌握的最难和最重要的事情之一。在早期，我认为这是无稽之谈——只是跟人讲电话，会议期间交谈，发送电子邮件能有多难？任何有着专业沟通经验的人都会对这种看法嗤之以鼻，我现在也会。你会惊讶地发现误解的快速突然出现，工作流程是如此之复杂，以及项目进程的拖延。

要真正掌握高效的沟通，你需要对实际工作中你需要工作于什么有一个基本的了解（我强烈推荐Charles Petzold的《Code》）并彼此交互。写博客，并与编程社区互动有助于有效地提高沟通能力。

如果你能掌握简练，实事求是，通俗易懂（如果需要的话）的沟通方式，并将复杂的问题和解决方案分解为可理解和很小的块，那么你就能在软件开发领域立于不败之地。你会发现项目经理，其他的程序员，以及执行主管等都会争夺你去他们的团队。

保持健康的心态

专业软件开发人员的成长之路没有一条不充满着荆棘和困难，所以你很容易掉入不健康的自我思考和职业选择的陷阱。通过了解每个人都会有的专业的不安全感，可以在你对自己失去信心的时候更好的激励自己。

1.要知道，每个人都感觉自己像骗子。

你在你的职业和生活中遇到的每个人都在与骗子综合征做斗争。我们每个人都觉得自己正处在被发现自己是骗子，然后被公开批评无能的边缘。了解这一点能在精神领域帮助你觉得公平，而且还能帮助你认识到，每一个做过值得夸耀的事情的人曾几何时的想法就和你现在一样。

这种心态可以帮助你坚持下来！如果再加上具有建设性的渠道方法——学习新的语言，开发方法，以及解决问题的方法——你的整个职业生涯都将有极大的提高，并且能够快速让你成为技艺大师。

2.知道自己会陷入困境。

毫无疑问，就是在编程中我终于接受了我是人这个事实——我也有犯迷糊，笨手笨脚，错误频出的时候。没错，你也是如此。你会错过最后期限，太多次点击“全部回复”，滑动捕捉一些严重的错误，或者在应用程序架构中轻易放过一个令人难以置信的bug。

要想保持快乐和健康，那就得让自己去分析错误，然后从中学习，还要应用所学的东西以便于下次完成得更好。

3.设身处地地思考。

我第一次被老板骂的时候，你知道我是怎么做的吗？我快速回到我的办公室，锁上门，然后哭了。我觉得我是有史以来最糟糕的程序员，并且开始担心自己会不会被炒鱿鱼。但之后，项目经理走进我的办公室，向我解释说我的进程和项目迄今都很好。老板只是刚刚发现她的女儿病的厉害，上司又刚刚指责了她的过失，然后又雪上加霜地被起诉离婚了才这样。好吧。

当我知道了我的老板的这些经历时，我对自己的自我怀疑和担心立即一去无踪。如果是我在那样的情况下，我很有可能也会做出相同的反应。

感同身受是一个程序员和一个人成功的根本。了解客户和用户的真正需求，或者知道上司所身处的压力，可以让你明白他们的行为原因。还可以让你知道你该如何提供有价值和可解决问题的方法，展示你的能力。

作为一个刚刚起步的软件开发者，循着我的建议，你的面前已经有了一条康庄大道。编写伟大的代码以及遵守行业内的相关规定，需要你几乎每天来直面自己的弱点，并要求你不断提高自己。

你可能会和其他人一样不时地动摇，并且尽管我们已经讨论了一些步骤和策略，你还是会陷入消极思想的泥潭——这是完全正常的现象。

只要你能全身心投入，持续改善提高，认识到自己不过是个人，能够设身处地地思考，你将会步入行业最值得尊敬和最有成就的开发者的行列。

